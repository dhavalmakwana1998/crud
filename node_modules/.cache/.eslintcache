[{"E:\\React Practical\\crud\\src\\index.js":"1","E:\\React Practical\\crud\\src\\App.js":"2","E:\\React Practical\\crud\\src\\component\\User.jsx":"3","E:\\React Practical\\crud\\src\\component\\UserView.jsx":"4"},{"size":219,"mtime":1625910276131,"results":"5","hashOfConfig":"6"},{"size":5770,"mtime":1626009846235,"results":"7","hashOfConfig":"6"},{"size":4883,"mtime":1626010567190,"results":"8","hashOfConfig":"6"},{"size":2447,"mtime":1626012997209,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6r2mzs",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React Practical\\crud\\src\\index.js",[],["20","21"],"E:\\React Practical\\crud\\src\\App.js",[],"E:\\React Practical\\crud\\src\\component\\User.jsx",["22","23","24","25","26","27","28"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  TextField,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ViewUser from \"./UserView\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/userdb\");\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n              <StyledTableCell>Full Name</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>City</StyledTableCell>\r\n              <StyledTableCell>Zipcode</StyledTableCell>\r\n              <StyledTableCell>Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!users ? (\r\n              <h5>no records found</h5>\r\n            ) : (\r\n              users\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {row.id}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.name} {row.surname}\r\n                    </TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.address.city}</TableCell>\r\n                    <TableCell>{row.address.zipcode}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton>\r\n                        <Link to={`/user/${row.id}`}>\r\n                          <VisibilityIcon color=\"primary\" />\r\n                        </Link>\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Edit style={{ color: \"#ff9800\" }} />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Delete color=\"secondary\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n              count={users.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","E:\\React Practical\\crud\\src\\component\\UserView.jsx",["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":13,"column":3,"nodeType":"37","messageId":"38","endLine":13,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":14,"column":3,"nodeType":"37","messageId":"38","endLine":14,"endColumn":6},{"ruleId":"35","severity":1,"message":"40","line":15,"column":3,"nodeType":"37","messageId":"38","endLine":15,"endColumn":17},{"ruleId":"35","severity":1,"message":"41","line":18,"column":8,"nodeType":"37","messageId":"38","endLine":18,"endColumn":17},{"ruleId":"35","severity":1,"message":"42","line":22,"column":8,"nodeType":"37","messageId":"38","endLine":22,"endColumn":16},{"ruleId":"35","severity":1,"message":"43","line":42,"column":10,"nodeType":"37","messageId":"38","endLine":42,"endColumn":20},{"ruleId":"35","severity":1,"message":"44","line":42,"column":22,"nodeType":"37","messageId":"38","endLine":42,"endColumn":35},{"ruleId":"35","severity":1,"message":"45","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":32,"column":6,"nodeType":"48","endLine":32,"endColumn":8,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'InputAdornment' is defined but never used.","'ClearIcon' is defined but never used.","'ViewUser' is defined but never used.","'searchText' is assigned a value but never used.","'setSearchText' is assigned a value but never used.","'withStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [loadUser]",{"range":"55","text":"56"},[964,966],"[loadUser]"]