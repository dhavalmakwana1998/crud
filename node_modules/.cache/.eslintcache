[{"E:\\React Practical\\crud\\src\\index.js":"1","E:\\React Practical\\crud\\src\\App.js":"2","E:\\React Practical\\crud\\src\\component\\User.jsx":"3","E:\\React Practical\\crud\\src\\component\\UserView.jsx":"4","E:\\React Practical\\crud\\src\\component\\UserAdd.jsx":"5","E:\\React Practical\\crud\\src\\component\\UserEdit.jsx":"6","E:\\React Practical\\crud\\src\\skeleton\\SkeletonTable.jsx":"7","E:\\React Practical\\crud\\src\\skeleton\\SkeletonCard.jsx":"8","E:\\React Practical\\crud\\src\\skeleton\\SkeletonForm.jsx":"9","E:\\React Practical\\crud\\src\\alert\\Snackbar.js":"10","E:\\React Practical\\crud\\src\\alert\\AlertMessage.js":"11"},{"size":219,"mtime":1625910276131,"results":"12","hashOfConfig":"13"},{"size":5845,"mtime":1626286963399,"results":"14","hashOfConfig":"13"},{"size":8879,"mtime":1626184055888,"results":"15","hashOfConfig":"13"},{"size":6978,"mtime":1626107367412,"results":"16","hashOfConfig":"13"},{"size":6270,"mtime":1626112802135,"results":"17","hashOfConfig":"13"},{"size":6864,"mtime":1626288603893,"results":"18","hashOfConfig":"13"},{"size":3395,"mtime":1626182721356,"results":"19","hashOfConfig":"13"},{"size":759,"mtime":1626107316885,"results":"20","hashOfConfig":"21"},{"size":1124,"mtime":1626107534823,"results":"22","hashOfConfig":"13"},{"size":967,"mtime":1626111348660,"results":"23","hashOfConfig":"21"},{"size":517,"mtime":1626112887996,"results":"24","hashOfConfig":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eztxyk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6r2mzs",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React Practical\\crud\\src\\index.js",[],"E:\\React Practical\\crud\\src\\App.js",[],"E:\\React Practical\\crud\\src\\component\\User.jsx",["51"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SkeletonTable from \"../skeleton/SkeletonTable\";\r\nimport {\r\n  TablePagination,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\nimport packageJson from \"../../package.json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(3);\r\n\r\n  const loadUser = async () => {\r\n    const res = await axios.get(packageJson.apiUrl);\r\n    const user = res.data.reverse();\r\n    setTimeout(() => {\r\n      setUsers(user);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await axios.delete(packageJson.apiUrl + id);\r\n    setConfirmdDeleteId(null);\r\n    setUsers([]);\r\n    loadUser();\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {users.length ? (\r\n        <>\r\n          <Grid container>\r\n            <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography variant=\"h4\">Users</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box align=\"right\">\r\n                  <Link to=\"/user/add\">\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      startIcon={<AddIcon />}\r\n                    >\r\n                      Add User\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Dialog\r\n              open={open}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              onClose={() => {\r\n                setOpen(false);\r\n              }}\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle\r\n                style={{ color: \"red\" }}\r\n                id=\"alert-dialog-slide-title\"\r\n              >\r\n                {\"Are you sure you want to delete this record?\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText\r\n                  color=\"secondary\"\r\n                  id=\"alert-dialog-slide-description\"\r\n                >\r\n                  Record will be deleted permanet..!\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Disagree\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    deleteUser(confirmDeleteId);\r\n                  }}\r\n                  color=\"secondary\"\r\n                >\r\n                  Agree\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n            <TableContainer component={Paper}>\r\n              <Table\r\n                className={classes.table}\r\n                stickyHeader\r\n                aria-label=\"sticky table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n                    <StyledTableCell>Full Name</StyledTableCell>\r\n                    <StyledTableCell>Userame</StyledTableCell>\r\n                    <StyledTableCell>Email</StyledTableCell>\r\n                    <StyledTableCell>City</StyledTableCell>\r\n                    <StyledTableCell>Zipcode</StyledTableCell>\r\n                    <StyledTableCell>Action</StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {!users.length ? (\r\n                    <TableRow>\r\n                      <TableCell rowSpan={7}>No records found</TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    users\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, ind) => (\r\n                        <TableRow key={ind + 1}>\r\n                          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                            {ind + 1}\r\n                          </TableCell>\r\n                          <TableCell>{row.name}</TableCell>\r\n                          <TableCell>{row.username}</TableCell>\r\n                          <TableCell>{row.email}</TableCell>\r\n                          <TableCell>{row.city}</TableCell>\r\n                          <TableCell>{row.phone}</TableCell>\r\n                          <TableCell>\r\n                            <IconButton>\r\n                              <Link to={`/user/${row.id}`}>\r\n                                <VisibilityIcon color=\"primary\" />\r\n                              </Link>\r\n                            </IconButton>\r\n                            <IconButton>\r\n                              <Link to={`/user/edit/${row.id}`}>\r\n                                <Edit style={{ color: \"#ff9800\" }} />\r\n                              </Link>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => openConfirm(row.id)}>\r\n                              <Delete color=\"secondary\" />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                  )}\r\n                  {!users.length ? (\r\n                    <></>\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n                        count={users.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                      />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <SkeletonTable />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","E:\\React Practical\\crud\\src\\component\\UserView.jsx",["52","53"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport axios from \"axios\";\r\nimport packageJson from \"../../package.json\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction UserView() {\r\n  const [user, setUsers] = useState();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await axios.delete(packageJson.apiUrl + id);\r\n    setConfirmdDeleteId(null);\r\n    history.push(\"/user\");\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const res = await axios.get(packageJson.apiUrl + id);\r\n      const user = await res.data;\r\n      setTimeout(() => {\r\n        setUsers(user);\r\n      }, 1000);\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <div className=\"container\">\r\n          <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n              {\"Are you sure you want to delete this record?\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                color=\"secondary\"\r\n                id=\"alert-dialog-slide-description\"\r\n              >\r\n                Record will be deleted permanet..!\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                Disagree\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  deleteUser(confirmDeleteId);\r\n                }}\r\n                color=\"secondary\"\r\n              >\r\n                Agree\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          {user && (\r\n            <Card className={classes.root}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image=\"https://picsum.photos/seed/picsum/700/500\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {user.name} <span>•</span> {user.username}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"h6\" color=\"error\">\r\n                    {user.email} <span>•</span> {user.website} <span>•</span>\r\n                    {user.phone}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"body1\">\r\n                    {user.city}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {user.bio}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Link to=\"/user\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    startIcon={<ArrowBack />}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Link>\r\n                <Link to=\"/user/add\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Link>\r\n                <Link to={`/user/edit/` + user.id}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    startIcon={<Edit />}\r\n                    style={{ background: \"#ff9800\" }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  style={{ marginLeft: \"auto\" }}\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<Delete />}\r\n                  onClick={() => openConfirm(user.id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Box pt={0.5} className={classes.root}>\r\n          <Skeleton variant=\"rect\" width=\"100%\" height={118} />\r\n          <Skeleton variant=\"text\" height={50} />\r\n          <Skeleton variant=\"text\" height={30} />\r\n          <Grid container>\r\n            <Grid item xs={2}>\r\n              <Skeleton width=\"80%\" height={30} />\r\n            </Grid>\r\n\r\n            <Grid item sm={2}></Grid>\r\n            <Grid item sm={2}></Grid>\r\n            <Grid item sm={2}>\r\n              <Skeleton width=\"80%\" height={30} alignItems=\"right\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserView;\r\n","E:\\React Practical\\crud\\src\\component\\UserAdd.jsx",["54","55"],"import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport packageJson from \"../../package.json\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction UserAdd() {\r\n  const [users, setUsers] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    city: \"\",\r\n    bio: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const onInputChange = (event) => {\r\n    const eventName = event.target.name;\r\n    const eventValue = event.target.value;\r\n    setUsers({ ...users, [eventName]: eventValue });\r\n  };\r\n  const onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    const res = await axios.post(packageJson.apiUrl, users);\r\n    history.push(\"/user\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Add User</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to={\"/user\"}>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<ArrowBackIcon />}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Container maxWidth=\"md\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircle />\r\n            </Avatar>\r\n            <Typography>User Add</Typography>\r\n            <form className={classes.form} onSubmit={onSubmitHandle}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    value={users.name}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    onChange={onInputChange}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    value={users.username}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={users.email}\r\n                    onChange={onInputChange}\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={users.phone}\r\n                    onChange={onInputChange}\r\n                    label=\"Phone number\"\r\n                    id=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"website\"\r\n                    value={users.website}\r\n                    onChange={onInputChange}\r\n                    label=\"Website\"\r\n                    id=\"website\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    value={users.city}\r\n                    onChange={onInputChange}\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <TextField\r\n                    id=\"bio\"\r\n                    label=\"Bio\"\r\n                    multiline\r\n                    required\r\n                    fullWidth\r\n                    name=\"bio\"\r\n                    rows={3}\r\n                    variant=\"outlined\"\r\n                    value={users.bio}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserAdd;\r\n","E:\\React Practical\\crud\\src\\component\\UserEdit.jsx",["56"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport packageJson from \"../../package.json\";\r\nimport SkeletonForm from \"../skeleton/SkeletonForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction UserEdit() {\r\n  const [users, setUsers] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    city: \"\",\r\n    bio: \"\",\r\n  });\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const onInputChange = (event) => {\r\n    const eventName = event.target.name;\r\n    const eventValue = event.target.value;\r\n    setUsers({ ...users, [eventName]: eventValue });\r\n  };\r\n  const onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    await axios.put(packageJson.apiUrl + id, users);\r\n    history.push(\"/user\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async (id) => {\r\n      const res = await axios.get(packageJson.apiUrl + id);\r\n      setUsers(res.data);\r\n    };\r\n    loadData(id);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {users ? (\r\n        <div className=\"container\">\r\n          <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h4\">Edit User</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box align=\"right\">\r\n                <Link to={\"/user\"}>\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    startIcon={<ArrowBackIcon />}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Link>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Container maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <AccountCircle />\r\n              </Avatar>\r\n              <Typography>User Add</Typography>\r\n              <form className={classes.form} onSubmit={onSubmitHandle}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      value={users.name}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"name\"\r\n                      onChange={onInputChange}\r\n                      label=\"Full Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"username\"\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      value={users.username}\r\n                      onChange={onInputChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      value={users.email}\r\n                      onChange={onInputChange}\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"phone\"\r\n                      value={users.phone}\r\n                      onChange={onInputChange}\r\n                      label=\"Phone number\"\r\n                      id=\"phone\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"website\"\r\n                      value={users.website}\r\n                      onChange={onInputChange}\r\n                      label=\"Website\"\r\n                      id=\"website\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"city\"\r\n                      value={users.city}\r\n                      onChange={onInputChange}\r\n                      label=\"City\"\r\n                      id=\"city\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={12}>\r\n                    <TextField\r\n                      id=\"bio\"\r\n                      label=\"Bio\"\r\n                      multiline\r\n                      required\r\n                      fullWidth\r\n                      name=\"bio\"\r\n                      rows={3}\r\n                      variant=\"outlined\"\r\n                      value={users.bio}\r\n                      onChange={onInputChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"#ff9800\" }}\r\n                  className={classes.submit}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      ) : (\r\n        <SkeletonForm />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserEdit;\r\n","E:\\React Practical\\crud\\src\\skeleton\\SkeletonTable.jsx",[],"E:\\React Practical\\crud\\src\\skeleton\\SkeletonCard.jsx",[],"E:\\React Practical\\crud\\src\\skeleton\\SkeletonForm.jsx",[],"E:\\React Practical\\crud\\src\\alert\\Snackbar.js",[],"E:\\React Practical\\crud\\src\\alert\\AlertMessage.js",["57"],{"ruleId":"58","severity":1,"message":"59","line":69,"column":11,"nodeType":"60","messageId":"61","endLine":69,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":48,"column":11,"nodeType":"60","messageId":"61","endLine":48,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":67,"column":6,"nodeType":"64","endLine":67,"endColumn":8,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"66","line":16,"column":8,"nodeType":"60","messageId":"61","endLine":16,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":58,"column":11,"nodeType":"60","messageId":"61","endLine":58,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":69,"column":6,"nodeType":"64","endLine":69,"endColumn":8,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["69"],"'Skeleton' is defined but never used.",["70"],"'Button' is defined but never used.",{"desc":"71","fix":"72"},{"desc":"71","fix":"73"},"Update the dependencies array to be: [id]",{"range":"74","text":"75"},{"range":"76","text":"75"},[2320,2322],"[id]",[2062,2064]]