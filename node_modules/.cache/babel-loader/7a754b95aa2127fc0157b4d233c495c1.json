{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practical\\\\crud\\\\src\\\\alert\\\\NotiStack.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notistack(props) {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    variant,\n    message\n  } = props;\n\n  const handleClickVariant = variant => () => {\n    enqueueSnackbar(\"This is a success message!\", {\n      variant\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n    maxSnack: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Notistack, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Notistack;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notistack\");","map":{"version":3,"sources":["E:/React Practical/crud/src/alert/NotiStack.jsx"],"names":["React","Button","SnackbarProvider","useSnackbar","Notistack","props","enqueueSnackbar","variant","message","handleClickVariant"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,WAAW,EAAvC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBH,KAA7B;;AACA,QAAMI,kBAAkB,GAAIF,OAAD,IAAa,MAAM;AAC5CD,IAAAA,eAAe,CAAC,4BAAD,EAA+B;AAAEC,MAAAA;AAAF,KAA/B,CAAf;AACD,GAFD;;AAIA,sBAAO,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARuBH,S;UACMD,W;;;KADNC,S","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nexport default function Notistack(props) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { variant, message } = props;\r\n  const handleClickVariant = (variant) => () => {\r\n    enqueueSnackbar(\"This is a success message!\", { variant });\r\n  };\r\n\r\n  return <SnackbarProvider maxSnack={3}></SnackbarProvider>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}