{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practical\\\\crud\\\\src\\\\User.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { TablePagination } from \"@material-ui/core\";\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  GlobalFilter();\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `${count} records...`,\n      style: {\n        fontSize: \"1.1rem\",\n        border: \"0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\n\nfunction User() {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const loadUser = async () => {\n    const res = await fetch(\"http://localhost:3001/userdb\");\n    setUsers(await res.json());\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        stickeyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"#ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"zipcode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: !users ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"no records found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              component: \"th\",\n              scope: \"row\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: [row.name, \" \", row.surname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.address.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.address.zipcode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [3, 5, 7, 10, 15, 20],\n        count: users.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(User, \"9qR6a/g4oLx0ppJ0d+eCBI1kjak=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = User;\nexport default User;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"User\");","map":{"version":3,"sources":["E:/React Practical/crud/src/User.jsx"],"names":["useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","useTable","useFilters","useGlobalFilter","useAsyncDebounce","StyledTableCell","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","React","onChange","undefined","e","target","border","User","users","setUsers","page","setPage","rowsPerPage","setRowsPerPage","loadUser","res","fetch","json","handleChangePage","event","handleChangeRowsPerPage","classes","slice","map","row","id","name","surname","email","address","city","zipcode"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TablePagination } from \"@material-ui/core\";\r\nimport {\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from \"react-table\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n  GlobalFilter();\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        style={{\r\n          fontSize: \"1.1rem\",\r\n          border: \"0\",\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/userdb\");\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          stickeyHeader\r\n          aria-label=\"sticky table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n              <StyledTableCell>Full Name</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>City</StyledTableCell>\r\n              <StyledTableCell>zipcode</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!users ? (\r\n              <h5>no records found</h5>\r\n            ) : (\r\n              users\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <StyledTableRow key={row.id}>\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {row.id}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>\r\n                      {row.name} {row.surname}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell>{row.email}</StyledTableCell>\r\n                    <StyledTableCell>{row.address.city}</StyledTableCell>\r\n                    <StyledTableCell>{row.address.zipcode}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n          count={users.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}