{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practical\\\\crud\\\\src\\\\User.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.primary,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction User() {\n  _s();\n\n  const [users, setUsers] = useState();\n\n  const loadUser = async () => {\n    const res = await fetch(\"http://localhost:3001/userdb\");\n    setUsers(res.json());\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"#ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: \"zipcode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: [row.name, row.surname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.address.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"right\",\n              children: row.zipcode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(User, \"vX2JoweG2QMW/KZDatu+tiCyXg8=\", false, function () {\n  return [useStyles];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["E:/React Practical/crud/src/User.jsx"],"names":["useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","primary","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","User","users","setUsers","loadUser","res","fetch","json","classes","map","row","name","surname","email","e","address","city","zipcode","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.primary,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\nfunction User() {\r\n  const [users, setUsers] = useState();\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/userdb\");\r\n    setUsers(res.json());\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>#ID</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Full Name</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Email</StyledTableCell>\r\n              <StyledTableCell align=\"right\">City</StyledTableCell>\r\n              <StyledTableCell align=\"right\">zipcode</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map((row) => (\r\n              <StyledTableRow key={row.id}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                  {row.surname}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">{row.e}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  {row.address.city}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\">{row.zipcode}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}