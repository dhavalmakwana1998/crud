{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practical\\\\crud\\\\src\\\\component\\\\User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { TablePagination, Box, IconButton, Button, Typography, Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction User() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n\n  const loadUser = async () => {\n    const res = await fetch(\"http://localhost:3001/users\");\n    const users = await res.json();\n    /*setUsers(users.reverse());*/\n  };\n\n  const deleteUser = async id => {\n    setOpen(false);\n    await fetch(`http://localhost:3001/users/${id}`, {\n      method: \"delete\"\n    }).then(async res => {\n      console.log(await res);\n      setConfirmdDeleteId(null);\n      loadUser();\n    });\n  };\n\n  const openConfirm = deleteId => {\n    setConfirmdDeleteId(deleteId);\n    setOpen(true);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []); // function handleSearch(e) {\n  //   setSearchText(e.target.value);\n  //   const filtered = users.filter((row) => {\n  //     return row.name.includes(searchText);\n  //   });\n  //   setUsers(filtered);\n  // }\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          marginBottom: \"6px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/user/add\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 30\n                }, this),\n                children: \"Add User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: () => {\n          setOpen(false);\n        },\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          style: {\n            color: \"red\"\n          },\n          id: \"alert-dialog-slide-title\",\n          children: \"Are you sure you want to delete this record?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            color: \"secondary\",\n            id: \"alert-dialog-slide-description\",\n            children: \"Record will be deleted permanet..!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpen(false);\n            },\n            color: \"primary\",\n            children: \"Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              deleteUser(confirmDeleteId);\n            },\n            color: \"secondary\",\n            children: \"Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"#ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Userame\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Zipcode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [!users.length ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                rowSpan: true,\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"no records found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this) : users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                component: \"th\",\n                scope: \"row\",\n                children: ind + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.zipcode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/user/${row.id}`,\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    style: {\n                      color: \"#ff9800\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => openConfirm(row.id),\n                  children: /*#__PURE__*/_jsxDEV(Delete, {\n                    color: \"secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this)]\n            }, ind + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [3, 5, 7, 10, 15, 20],\n              count: users.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(User, \"aRDiIP2zASPnltwucN1tzGD8LvU=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = User;\nexport default User;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"User\");","map":{"version":3,"sources":["E:/React Practical/crud/src/component/User.jsx"],"names":["React","useState","useEffect","Link","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","Box","IconButton","Button","Typography","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Edit","Delete","VisibilityIcon","AddIcon","Transition","forwardRef","props","ref","StyledTableCell","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","useStyles","table","minWidth","User","users","setUsers","open","setOpen","confirmDeleteId","setConfirmdDeleteId","page","setPage","rowsPerPage","setRowsPerPage","loadUser","res","fetch","json","deleteUser","id","method","then","console","log","openConfirm","deleteId","handleChangePage","event","handleChangeRowsPerPage","target","value","classes","marginBottom","length","slice","map","row","ind","name","username","email","city","zipcode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(3);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/users\");\r\n    const users = await res.json();\r\n    /*setUsers(users.reverse());*/\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    await fetch(`http://localhost:3001/users/${id}`, {\r\n      method: \"delete\",\r\n    }).then(async (res) => {\r\n      console.log(await res);\r\n      setConfirmdDeleteId(null);\r\n      loadUser();\r\n    });\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Users</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to=\"/user/add\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                >\r\n                  Add User\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n            {\"Are you sure you want to delete this record?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              color=\"secondary\"\r\n              id=\"alert-dialog-slide-description\"\r\n            >\r\n              Record will be deleted permanet..!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Disagree\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                deleteUser(confirmDeleteId);\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n        <TableContainer component={Paper}>\r\n          <Table\r\n            className={classes.table}\r\n            stickyHeader\r\n            aria-label=\"sticky table\"\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n                <StyledTableCell>Full Name</StyledTableCell>\r\n                <StyledTableCell>Userame</StyledTableCell>\r\n                <StyledTableCell>Email</StyledTableCell>\r\n                <StyledTableCell>City</StyledTableCell>\r\n                <StyledTableCell>Zipcode</StyledTableCell>\r\n                <StyledTableCell>Action</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!users.length ? (\r\n                <TableRow>\r\n                  <TableCell align=\"center\" rowSpan>\r\n                    <h5>no records found</h5>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                users\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, ind) => (\r\n                    <TableRow key={ind + 1}>\r\n                      <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                        {ind + 1}\r\n                      </TableCell>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>{row.username}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.city}</TableCell>\r\n                      <TableCell>{row.zipcode}</TableCell>\r\n                      <TableCell>\r\n                        <IconButton>\r\n                          <Link to={`/user/${row.id}`}>\r\n                            <VisibilityIcon color=\"primary\" />\r\n                          </Link>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                          <Edit style={{ color: \"#ff9800\" }} />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => openConfirm(row.id)}>\r\n                          <Delete color=\"secondary\" />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              )}\r\n              <TablePagination\r\n                rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n                count={users.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}