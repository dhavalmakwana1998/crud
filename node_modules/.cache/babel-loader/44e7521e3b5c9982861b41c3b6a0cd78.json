{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practical\\\\crud\\\\src\\\\alert\\\\NotiStack.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notistack() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleClickVariant = variant => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar(\"This is a success message!\", {\n      variant\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n    maxSnack: 3,\n    children: /*#__PURE__*/_jsxDEV(MyAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notistack, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Notistack;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notistack\");","map":{"version":3,"sources":["E:/React Practical/crud/src/alert/NotiStack.jsx"],"names":["React","Button","SnackbarProvider","useSnackbar","Notistack","enqueueSnackbar","handleClickVariant","variant"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,WAAW,EAAvC;;AAEA,QAAMG,kBAAkB,GAAIC,OAAD,IAAa,MAAM;AAC5C;AACAF,IAAAA,eAAe,CAAC,4BAAD,EAA+B;AAAEE,MAAAA;AAAF,KAA/B,CAAf;AACD,GAHD;;AAKA,sBACE,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE,CAA5B;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbuBH,S;UACMD,W;;;KADNC,S","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nexport default function Notistack() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar(\"This is a success message!\", { variant });\r\n  };\r\n\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <MyAlert />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}