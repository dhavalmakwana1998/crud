{"version":3,"sources":["component/User.jsx","component/UserView.jsx","component/UserAdd.jsx","App.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","TableCell","useStyles","makeStyles","table","minWidth","User","useState","users","setUsers","open","setOpen","confirmDeleteId","setConfirmdDeleteId","page","setPage","rowsPerPage","setRowsPerPage","loadUser","a","fetch","res","json","reverse","deleteUser","id","method","then","console","log","useEffect","classes","Grid","container","spacing","style","marginBottom","item","xs","sm","Typography","variant","Box","align","to","Button","startIcon","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","TableContainer","component","Paper","Table","className","stickyHeader","TableHead","TableRow","TableBody","slice","map","row","ind","scope","name","username","email","city","zipcode","IconButton","deleteId","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","onRowsPerPageChange","target","value","root","maxWidth","margin","media","height","UserView","user","useParams","history","useHistory","push","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","website","phone","bio","CardActions","size","background","marginLeft","paper","marginTop","display","flexDirection","alignItems","avatar","secondary","main","form","width","submit","UserAdd","onInputChange","eventName","eventValue","onSubmitHandle","preventDefault","headers","Accept","JSON","stringify","Container","CssBaseline","Avatar","onSubmit","TextField","required","fullWidth","onChange","label","autoFocus","autoComplete","multiline","rows","type","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","icon","bgPrimary","App","useTheme","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","textDecoration","Divider","List","disablePadding","activeClassName","exact","ListItem","button","ListItemText","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e31285bc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Axios from \"axios\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(3);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/users\");\r\n    const users = await res.json();\r\n    setUsers(users.reverse());\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await fetch(`http://localhost:3001/users/${id}`, {\r\n      method: \"delete\",\r\n    }).then(async (res) => {\r\n      console.log(res);\r\n      setConfirmdDeleteId(null);\r\n      loadUser();\r\n    });\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h4\">Users</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box align=\"right\">\r\n            <Link to=\"/user/add\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add User\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n          {\"Are you sure you want to delete this record?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            color=\"secondary\"\r\n            id=\"alert-dialog-slide-description\"\r\n          >\r\n            Record will be deleted permanet..!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Disagree\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              deleteUser(confirmDeleteId);\r\n            }}\r\n            color=\"secondary\"\r\n          >\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n              <StyledTableCell>Full Name</StyledTableCell>\r\n              <StyledTableCell>Userame</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>City</StyledTableCell>\r\n              <StyledTableCell>Zipcode</StyledTableCell>\r\n              <StyledTableCell>Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!users ? (\r\n              <h5>no records found</h5>\r\n            ) : (\r\n              users\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, ind) => (\r\n                  <TableRow key={ind + 1}>\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {ind + 1}\r\n                    </TableCell>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell>{row.username}</TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.city}</TableCell>\r\n                    <TableCell>{row.zipcode}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton>\r\n                        <Link to={`/user/${row.id}`}>\r\n                          <VisibilityIcon color=\"primary\" />\r\n                        </Link>\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Edit style={{ color: \"#ff9800\" }} />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => openConfirm(row.id)}>\r\n                        <Delete color=\"secondary\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n              count={users.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Axios from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction UserView() {\r\n  const [user, setUsers] = useState();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(`http://localhost:3001/users/${id}`);\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await fetch(`http://localhost:3001/users/${id}`, {\r\n      method: \"delete\",\r\n    }).then(async (res) => {\r\n      setConfirmdDeleteId(null);\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n            {\"Are you sure you want to delete this record?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              color=\"secondary\"\r\n              id=\"alert-dialog-slide-description\"\r\n            >\r\n              Record will be deleted permanet..!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Disagree\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                deleteUser(confirmDeleteId);\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image=\"https://picsum.photos/seed/picsum/700/500\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            {user && (\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {user.name} <span>•</span> {user.username}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h6\" color=\"error\">\r\n                  {user.email} <span>•</span> {user.website} <span>•</span>\r\n                  {user.phone}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"body1\">\r\n                  {user.city}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {user.bio}\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Link to=\"/user\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                startIcon={<ArrowBack />}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/user/add\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Link>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              startIcon={<Edit />}\r\n              style={{ background: \"#ff9800\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: \"auto\" }}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<Delete />}\r\n              onClick={() => openConfirm(user.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserView;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction UserAdd() {\r\n  const [users, setUsers] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    city: \"\",\r\n    bio: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const onInputChange = (event) => {\r\n    const eventName = event.target.name;\r\n    const eventValue = event.target.value;\r\n    setUsers({ ...users, [eventName]: eventValue });\r\n  };\r\n  const onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    const res = await fetch(\"http://localhost:3001/users\", {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(users),\r\n    }).then(async (res) => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Add User</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to=\"/\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<ArrowBackIcon />}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Container maxWidth=\"md\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircle />\r\n            </Avatar>\r\n            <Typography>User Add</Typography>\r\n            <form className={classes.form} onSubmit={onSubmitHandle}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    value={users.name}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    onChange={onInputChange}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    value={users.username}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={users.email}\r\n                    onChange={onInputChange}\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={users.phone}\r\n                    onChange={onInputChange}\r\n                    label=\"Phone number\"\r\n                    id=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"website\"\r\n                    value={users.website}\r\n                    onChange={onInputChange}\r\n                    label=\"Website\"\r\n                    id=\"website\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    value={users.city}\r\n                    onChange={onInputChange}\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <TextField\r\n                    id=\"bio\"\r\n                    label=\"Bio\"\r\n                    multiline\r\n                    required\r\n                    fullWidth\r\n                    name=\"bio\"\r\n                    rows={3}\r\n                    variant=\"outlined\"\r\n                    value={users.bio}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserAdd;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport User from \"./component/User\";\nimport UserView from \"./component/UserView\";\nimport UserAdd from \"./component/UserAdd\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  icon: {\n    minWidth: \"30px\",\n  },\n  bgPrimary: {\n    backgroundColor: \"#3f51b5\",\n    color: \"#FFF\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                ReactJs Crud Opearation\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={`${classes.bgPrimary} ${classes.drawerHeader}`}>\n              <Typography variant=\"h5\">\n                <Link to=\"/\" style={{ color: \"#FFF\", textDecoration: \"none\" }}>\n                  Logo\n                </Link>\n              </Typography>\n              <IconButton style={{ color: \"#FFF\" }} onClick={handleDrawerClose}>\n                {theme.direction === \"ltr\" ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List disablePadding>\n              <NavLink\n                activeClassName=\"selected\"\n                style={{ textDecoration: \"none\" }}\n                exact\n                to=\"/user\"\n              >\n                <ListItem button>\n                  <AccountCircleIcon style={{ marginRight: \"5px\" }} />\n                  <ListItemText primary=\"User\" />\n                </ListItem>\n              </NavLink>\n            </List>\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route exact path=\"/\" component={User} />\n              <Route exact path=\"/user\" component={User} />\n              <Route exact path=\"/user/add\" component={UserAdd} />\n              <Route exact path=\"/user/:id\" component={UserView} />\n              <Route\n                render={() => {\n                  return <h1 align=\"center\">404 Not Found</h1>;\n                }}\n              />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}