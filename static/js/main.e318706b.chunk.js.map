{"version":3,"sources":["component/UserView.jsx","component/User.jsx","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","media","height","UserView","useState","user","setUsers","id","useParams","loadUser","a","fetch","res","json","useEffect","classes","className","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","name","username","color","email","website","company","catchPhrase","address","street","suite","city","CardActions","to","Button","size","StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","dark","common","white","body","fontSize","TableCell","table","minWidth","User","users","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","align","TableBody","slice","map","row","scope","surname","zipcode","IconButton","style","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","onRowsPerPageChange","target","value","drawerWidth","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","icon","bgPrimary","App","useTheme","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","onClick","edge","noWrap","Drawer","anchor","paper","textDecoration","direction","Divider","List","disablePadding","activeClassName","exact","ListItem","button","ListItemText","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e318706b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction UserView() {\r\n  const [user, setUsers] = useState();\r\n  const { id } = useParams();\r\n  const loadUser = async () => {\r\n    const res = await fetch(`http://localhost:3001/userdb/${id}`);\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image=\"https://picsum.photos/seed/picsum/700/500\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            {user && (\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {user.name} <span>•</span> {user.username}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h6\" color=\"error\">\r\n                  {user.email} <span>•</span> {user.website}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"body1\">\r\n                  {user.company.catchPhrase}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {user.address.street}\r\n                  {user.address.suite}\r\n                  {user.address.city}\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Link to=\"/user\">\r\n              <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n                Back\r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserView;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  TextField,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ViewUser from \"./UserView\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/userdb\");\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n              <StyledTableCell>Full Name</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>City</StyledTableCell>\r\n              <StyledTableCell>Zipcode</StyledTableCell>\r\n              <StyledTableCell>Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!users ? (\r\n              <h5>no records found</h5>\r\n            ) : (\r\n              users\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {row.id}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.name} {row.surname}\r\n                    </TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.address.city}</TableCell>\r\n                    <TableCell>{row.address.zipcode}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton>\r\n                        <Link to={`/user/${row.id}`}>\r\n                          <VisibilityIcon color=\"primary\" />\r\n                        </Link>\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Edit style={{ color: \"#ff9800\" }} />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Delete color=\"secondary\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n              count={users.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { BrowserRouter, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport User from \"./component/User\";\nimport UserView from \"./component/UserView\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  icon: {\n    minWidth: \"30px\",\n  },\n  bgPrimary: {\n    backgroundColor: \"#3f51b5\",\n    color: \"#FFF\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                ReactJs Crud Opearation\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={`${classes.bgPrimary} ${classes.drawerHeader}`}>\n              <Typography variant=\"h5\">\n                <Link to=\"/\" style={{ color: \"#FFF\", textDecoration: \"none\" }}>\n                  Logo\n                </Link>\n              </Typography>\n              <IconButton style={{ color: \"#FFF\" }} onClick={handleDrawerClose}>\n                {theme.direction === \"ltr\" ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List disablePadding>\n              <NavLink\n                activeClassName=\"selected\"\n                style={{ textDecoration: \"none\" }}\n                exact\n                to=\"/user\"\n              >\n                <ListItem button>\n                  <AccountCircleIcon style={{ marginRight: \"5px\" }} />\n                  <ListItemText primary=\"User\" />\n                </ListItem>\n              </NavLink>\n            </List>\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => {\n                  return <h1 align=\"center\">Welcome to ReactJs Crud</h1>;\n                }}\n              />\n              <Route exact path=\"/user\" component={User} />\n              <Route exact path=\"/user/:id\" component={UserView} />\n              <Route\n                render={() => {\n                  return <h1 align=\"center\">404 Not Found</h1>;\n                }}\n              />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}