{"version":3,"sources":["User.jsx","App.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","TableCell","useStyles","makeStyles","table","minWidth","User","useState","users","setUsers","page","setPage","rowsPerPage","setRowsPerPage","loadUser","a","fetch","res","json","useEffect","classes","TableContainer","component","Paper","Table","className","stickyHeader","TableHead","TableRow","align","TableBody","slice","map","row","scope","id","name","surname","email","address","city","zipcode","IconButton","style","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","onRowsPerPageChange","target","value","drawerWidth","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","icon","bgPrimary","App","useTheme","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","to","textDecoration","direction","Divider","List","disablePadding","activeClassName","exact","ListItem","button","ListItemText","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"yhBAqBMA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,QAAQC,KACvCC,MAAON,EAAMG,QAAQI,OAAOC,OAE9BC,KAAM,CACJC,SAAU,OANUX,CAQpBY,KAEEC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAkHCC,OA9Gf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAEA,GAFA,UAEwBA,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACGC,MAAM,gCADT,cACTC,EADS,YAEfR,EAFe,SAEAQ,EAAIC,OAFJ,6EAAH,qDAadC,qBAAU,WACRL,MACC,IAUH,IAAMM,EAAUlB,IAChB,OACE,mCAkBE,cAACmB,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQhB,MAAOsB,cAAY,EAAC,aAAW,eAAzD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACxC,EAAD,CAAiByC,MAAM,SAAvB,iBACA,cAACzC,EAAD,wBACA,cAACA,EAAD,oBACA,cAACA,EAAD,mBACA,cAACA,EAAD,sBACA,cAACA,EAAD,0BAGJ,eAAC0C,EAAA,EAAD,WACItB,EAGAA,EACGuB,MAAMrB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CoB,KAAI,SAACC,GAAD,OACH,eAACL,EAAA,EAAD,WACE,cAAC3B,EAAA,EAAD,CAAW4B,MAAM,SAASP,UAAU,KAAKY,MAAM,MAA/C,SACGD,EAAIE,KAEP,eAAClC,EAAA,EAAD,WACGgC,EAAIG,KADP,IACcH,EAAII,WAElB,cAACpC,EAAA,EAAD,UAAYgC,EAAIK,QAChB,cAACrC,EAAA,EAAD,UAAYgC,EAAIM,QAAQC,OACxB,cAACvC,EAAA,EAAD,UAAYgC,EAAIM,QAAQE,UACxB,eAACxC,EAAA,EAAD,WACE,cAACyC,EAAA,EAAD,UACE,cAAC,IAAD,CAAgB9C,MAAM,cAExB,cAAC8C,EAAA,EAAD,UACE,cAAC,IAAD,CAAMC,MAAO,CAAE/C,MAAO,eAExB,cAAC8C,EAAA,EAAD,UACE,cAAC,IAAD,CAAQ9C,MAAM,qBAlBLqC,EAAIE,OALvB,kDA6BF,cAACS,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IACtCC,MAAOtC,EAAMuC,OACbnC,YAAaA,EACbF,KAAMA,EACNsC,aAxFa,SAACC,EAAOvC,GAC/BC,EAAQD,IAwFEwC,oBAtFoB,SAACD,GAC/BpC,EAAeoC,EAAME,OAAOC,OAC5BzC,EAAQ,iBClCN0C,GAAc,IAEdnD,GAAYC,aAAW,SAACb,GAAD,MAAY,CACvCgE,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYnE,EAAMoE,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQtE,EAAMoE,YAAYE,OAAOC,MACjCC,SAAUxE,EAAMoE,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBZ,GAAjB,OACLa,WAAYb,GACZI,WAAYnE,EAAMoE,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQtE,EAAMoE,YAAYE,OAAOO,QACjCL,SAAUxE,EAAMoE,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAahF,EAAMiF,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MAAOZ,GACPqB,WAAY,GAEdC,YAAa,CACXV,MAAOZ,IAETuB,aAAa,yBACXrB,QAAS,OACTsB,WAAY,SACZC,QAASxF,EAAMiF,QAAQ,EAAG,IAEvBjF,EAAMyF,OAAOC,SALN,IAMVC,eAAgB,kBAElBC,QAAS,CACPC,SAAU,EACVL,QAASxF,EAAMiF,QAAQ,GACvBd,WAAYnE,EAAMoE,YAAYC,OAAO,SAAU,CAC7CC,OAAQtE,EAAMoE,YAAYE,OAAOC,MACjCC,SAAUxE,EAAMoE,YAAYI,SAASC,gBAEvCG,YAAY,KAEdkB,aAAc,CACZ3B,WAAYnE,EAAMoE,YAAYC,OAAO,SAAU,CAC7CC,OAAQtE,EAAMoE,YAAYE,OAAOO,QACjCL,SAAUxE,EAAMoE,YAAYI,SAASM,iBAEvCF,WAAY,GAEdmB,KAAM,CACJhF,SAAU,QAEZiF,UAAW,CACT9F,gBAAiB,UACjBI,MAAO,YA6GI2F,OAzGf,WACE,IAAMnE,EAAUlB,KACVZ,EAAQkG,cACd,EAAwBjF,oBAAS,GAAjC,mBAAOkF,EAAP,KAAaC,EAAb,KAUA,OACE,cAAC,IAAD,UACE,qBAAKjE,UAAU,MAAf,SACE,sBAAKA,UAAWL,EAAQkC,KAAxB,UACE,cAACqC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAS,QACTpE,UAAWqE,YAAK1E,EAAQoC,OAAT,eACZpC,EAAQ4C,YAAcyB,IAH3B,SAME,eAACM,EAAA,EAAD,WACE,cAACrD,EAAA,EAAD,CACE9C,MAAM,UACN,aAAW,cACXoG,QAvBW,WACvBN,GAAQ,IAuBIO,KAAK,QACLxE,UAAWqE,YAAK1E,EAAQiD,WAAYoB,GAAQrE,EAAQoD,MALtD,SAOE,cAAC,IAAD,MAEF,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,0CAKJ,eAACC,EAAA,EAAD,CACE5E,UAAWL,EAAQqD,OACnB0B,QAAQ,aACRG,OAAO,OACPb,KAAMA,EACNrE,QAAS,CACPmF,MAAOnF,EAAQuD,aANnB,UASE,sBAAKlD,UAAS,UAAKL,EAAQkE,UAAb,YAA0BlE,EAAQwD,cAAhD,UACE,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,cAAC,IAAD,CAAMK,GAAG,IAAI7D,MAAO,CAAE/C,MAAO,OAAQ6G,eAAgB,QAArD,oBAIF,cAAC/D,EAAA,EAAD,CAAYC,MAAO,CAAE/C,MAAO,QAAUoG,QA7CxB,WACxBN,GAAQ,IA4CE,SACuB,QAApBpG,EAAMoH,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,SAIN,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,gBAAc,EAApB,SACE,cAAC,IAAD,CACEC,gBAAgB,WAChBnE,MAAO,CAAE8D,eAAgB,QACzBM,OAAK,EACLP,GAAG,QAJL,SAME,eAACQ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAAC,IAAD,CAAmBtE,MAAO,CAAE2B,YAAa,SACzC,cAAC4C,EAAA,EAAD,CAAcxH,QAAQ,mBAK9B,uBACE+B,UAAWqE,YAAK1E,EAAQ8D,QAAT,eACZ9D,EAAQgE,aAAeK,IAF5B,UAKE,qBAAKhE,UAAWL,EAAQwD,eACxB,eAAC,IAAD,WACE,cAAC,IAAD,CACEmC,OAAK,EACLI,KAAK,IACLC,OAAQ,WACN,OAAO,oBAAIvF,MAAM,SAAV,wCAGX,cAAC,IAAD,CAAOkF,OAAK,EAACI,KAAK,QAAQ7F,UAAWhB,KACrC,cAAC,IAAD,CACE8G,OAAQ,WACN,OAAO,oBAAIvF,MAAM,SAAV,4CC/KzBwF,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4c38efdc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  TextField,\r\n  Box,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState([]);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const loadUser = async () => {\r\n    const res = await fetch(\"http://localhost:3001/userdb\");\r\n    setUsers(await res.json());\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n              <StyledTableCell>Full Name</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>City</StyledTableCell>\r\n              <StyledTableCell>Zipcode</StyledTableCell>\r\n              <StyledTableCell>Action</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!users ? (\r\n              <h5>no records found</h5>\r\n            ) : (\r\n              users\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {row.id}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.name} {row.surname}\r\n                    </TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.address.city}</TableCell>\r\n                    <TableCell>{row.address.zipcode}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton>\r\n                        <VisibilityIcon color=\"primary\" />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Edit style={{ color: \"#ff9800\" }} />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <Delete color=\"secondary\" />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n              count={users.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { BrowserRouter, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport User from \"./User\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  icon: {\n    minWidth: \"30px\",\n  },\n  bgPrimary: {\n    backgroundColor: \"#3f51b5\",\n    color: \"#FFF\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                ReactJs Crud Opearation\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={`${classes.bgPrimary} ${classes.drawerHeader}`}>\n              <Typography variant=\"h5\">\n                <Link to=\"/\" style={{ color: \"#FFF\", textDecoration: \"none\" }}>\n                  Logo\n                </Link>\n              </Typography>\n              <IconButton style={{ color: \"#FFF\" }} onClick={handleDrawerClose}>\n                {theme.direction === \"ltr\" ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List disablePadding>\n              <NavLink\n                activeClassName=\"selected\"\n                style={{ textDecoration: \"none\" }}\n                exact\n                to=\"/user\"\n              >\n                <ListItem button>\n                  <AccountCircleIcon style={{ marginRight: \"5px\" }} />\n                  <ListItemText primary=\"User\" />\n                </ListItem>\n              </NavLink>\n            </List>\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => {\n                  return <h1 align=\"center\">Welcome to ReactJs Crud</h1>;\n                }}\n              />\n              <Route exact path=\"/user\" component={User} />\n              <Route\n                render={() => {\n                  return <h1 align=\"center\">404 Not Found</h1>;\n                }}\n              />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}