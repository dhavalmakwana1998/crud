{"version":3,"sources":["component/User.jsx","component/UserView.jsx","component/UserAdd.jsx","component/UserEdit.jsx","App.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","dark","color","common","white","body","fontSize","TableCell","useStyles","makeStyles","table","minWidth","User","useState","users","setUsers","open","setOpen","confirmDeleteId","setConfirmdDeleteId","page","setPage","rowsPerPage","setRowsPerPage","loadUser","a","axios","get","res","data","reverse","deleteUser","id","delete","useEffect","classes","Grid","container","spacing","style","marginBottom","item","xs","sm","Typography","variant","Box","align","to","Button","startIcon","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","TableContainer","component","Paper","Table","className","stickyHeader","TableHead","TableRow","TableBody","length","slice","map","row","ind","scope","name","username","email","city","phone","IconButton","deleteId","rowSpan","TablePagination","rowsPerPageOptions","count","onPageChange","event","onRowsPerPageChange","target","value","root","maxWidth","margin","media","height","UserView","user","useParams","history","useHistory","push","json","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","website","bio","CardActions","size","background","marginLeft","paper","marginTop","display","flexDirection","alignItems","avatar","secondary","main","form","width","submit","UserAdd","onInputChange","eventName","eventValue","onSubmitHandle","preventDefault","post","Container","CssBaseline","Avatar","onSubmit","TextField","required","fullWidth","onChange","label","autoFocus","autoComplete","multiline","rows","type","UserEdit","put","loadData","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","icon","bgPrimary","App","useTheme","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","textDecoration","Divider","List","disablePadding","activeClassName","exact","ListItem","button","ListItemText","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad5c9472.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  TablePagination,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction User() {\r\n  const [users, setUsers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(3);\r\n\r\n  const loadUser = async () => {\r\n    const res = await axios.get(\r\n      \"https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/\"\r\n    );\r\n    setUsers(res.data.reverse());\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await axios.delete(\r\n      `https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/${id}`\r\n    );\r\n    setConfirmdDeleteId(null);\r\n    loadUser();\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // function handleSearch(e) {\r\n  //   setSearchText(e.target.value);\r\n  //   const filtered = users.filter((row) => {\r\n  //     return row.name.includes(searchText);\r\n  //   });\r\n  //   setUsers(filtered);\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Users</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to=\"/user/add\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                >\r\n                  Add User\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n            {\"Are you sure you want to delete this record?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              color=\"secondary\"\r\n              id=\"alert-dialog-slide-description\"\r\n            >\r\n              Record will be deleted permanet..!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Disagree\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                deleteUser(confirmDeleteId);\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* <Box marginBottom={2} align=\"right\">\r\n        <TextField\r\n          size=\"small\"\r\n          onChange={handleSearch}\r\n          label=\"Search by name\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          value={searchText}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => loadUser}>\r\n                <ClearIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </Box> */}\r\n        <TableContainer component={Paper}>\r\n          <Table\r\n            className={classes.table}\r\n            stickyHeader\r\n            aria-label=\"sticky table\"\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"center\">#ID</StyledTableCell>\r\n                <StyledTableCell>Full Name</StyledTableCell>\r\n                <StyledTableCell>Userame</StyledTableCell>\r\n                <StyledTableCell>Email</StyledTableCell>\r\n                <StyledTableCell>City</StyledTableCell>\r\n                <StyledTableCell>Zipcode</StyledTableCell>\r\n                <StyledTableCell>Action</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!users.length ? (\r\n                <TableRow>\r\n                  <TableCell rowSpan={7}>No records found</TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                users\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, ind) => (\r\n                    <TableRow key={ind + 1}>\r\n                      <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                        {ind + 1}\r\n                      </TableCell>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>{row.username}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.city}</TableCell>\r\n                      <TableCell>{row.phone}</TableCell>\r\n                      <TableCell>\r\n                        <IconButton>\r\n                          <Link to={`/user/${row.id}`}>\r\n                            <VisibilityIcon color=\"primary\" />\r\n                          </Link>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                          <Link to={`/user/edit/${row.id}`}>\r\n                            <Edit style={{ color: \"#ff9800\" }} />\r\n                          </Link>\r\n                        </IconButton>\r\n                        <IconButton onClick={() => openConfirm(row.id)}>\r\n                          <Delete color=\"secondary\" />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              )}\r\n              {!users.length ? (\r\n                <></>\r\n              ) : (\r\n                <TablePagination\r\n                  rowsPerPageOptions={[3, 5, 7, 10, 15, 20]}\r\n                  count={users.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onPageChange={handleChangePage}\r\n                  onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport axios from \"axios\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: \"auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nfunction UserView() {\r\n  const [user, setUsers] = useState();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmDeleteId, setConfirmdDeleteId] = useState(null);\r\n\r\n  const deleteUser = async (id) => {\r\n    setOpen(false);\r\n    const res = await axios.delete(\r\n      `https://my-json-server.typicode.com/dhavalmakwana1998/crud/users${id}`\r\n    );\r\n    setConfirmdDeleteId(null);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const openConfirm = (deleteId) => {\r\n    setConfirmdDeleteId(deleteId);\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const res = await axios.get(\r\n        `https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/${id}`\r\n      );\r\n      setUsers(await res.json());\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={() => {\r\n            setOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle style={{ color: \"red\" }} id=\"alert-dialog-slide-title\">\r\n            {\"Are you sure you want to delete this record?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              color=\"secondary\"\r\n              id=\"alert-dialog-slide-description\"\r\n            >\r\n              Record will be deleted permanet..!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Disagree\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                deleteUser(confirmDeleteId);\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image=\"https://picsum.photos/seed/picsum/700/500\"\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            {user && (\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {user.name} <span>•</span> {user.username}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h6\" color=\"error\">\r\n                  {user.email} <span>•</span> {user.website} <span>•</span>\r\n                  {user.phone}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"body1\">\r\n                  {user.city}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {user.bio}\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Link to=\"/user\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                startIcon={<ArrowBack />}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/user/add\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Link>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              startIcon={<Edit />}\r\n              style={{ background: \"#ff9800\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: \"auto\" }}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<Delete />}\r\n              onClick={() => openConfirm(user.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserView;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction UserAdd() {\r\n  const [users, setUsers] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    city: \"\",\r\n    bio: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const onInputChange = (event) => {\r\n    const eventName = event.target.name;\r\n    const eventValue = event.target.value;\r\n    setUsers({ ...users, [eventName]: eventValue });\r\n  };\r\n  const onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    const res = axios.post(\r\n      \"https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/\",\r\n      users\r\n    );\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Add User</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to=\"/\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<ArrowBackIcon />}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Container maxWidth=\"md\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircle />\r\n            </Avatar>\r\n            <Typography>User Add</Typography>\r\n            <form className={classes.form} onSubmit={onSubmitHandle}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    value={users.name}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    onChange={onInputChange}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    value={users.username}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={users.email}\r\n                    onChange={onInputChange}\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={users.phone}\r\n                    onChange={onInputChange}\r\n                    label=\"Phone number\"\r\n                    id=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"website\"\r\n                    value={users.website}\r\n                    onChange={onInputChange}\r\n                    label=\"Website\"\r\n                    id=\"website\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    value={users.city}\r\n                    onChange={onInputChange}\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <TextField\r\n                    id=\"bio\"\r\n                    label=\"Bio\"\r\n                    multiline\r\n                    required\r\n                    fullWidth\r\n                    name=\"bio\"\r\n                    rows={3}\r\n                    variant=\"outlined\"\r\n                    value={users.bio}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Add\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserAdd;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction UserEdit() {\r\n  const [users, setUsers] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    city: \"\",\r\n    bio: \"\",\r\n  });\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const onInputChange = (event) => {\r\n    const eventName = event.target.name;\r\n    const eventValue = event.target.value;\r\n    setUsers({ ...users, [eventName]: eventValue });\r\n  };\r\n  const onSubmitHandle = async (event) => {\r\n    event.preventDefault();\r\n    const res = axios.put(\r\n      `https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/${id}`\r\n    );\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async (id) => {\r\n      const res = await axios.get(\r\n        `https://my-json-server.typicode.com/dhavalmakwana1998/crud/users/${id}`\r\n      );\r\n      setUsers(await res.json());\r\n    };\r\n    loadData(id);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Grid container spacing={3} style={{ marginBottom: \"6px\" }}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h4\">Edit User</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box align=\"right\">\r\n              <Link to=\"/\">\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  startIcon={<ArrowBackIcon />}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Container maxWidth=\"md\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircle />\r\n            </Avatar>\r\n            <Typography>User Add</Typography>\r\n            <form className={classes.form} onSubmit={onSubmitHandle}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"name\"\r\n                    value={users.name}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    onChange={onInputChange}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    value={users.username}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={users.email}\r\n                    onChange={onInputChange}\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={users.phone}\r\n                    onChange={onInputChange}\r\n                    label=\"Phone number\"\r\n                    id=\"phone\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"website\"\r\n                    value={users.website}\r\n                    onChange={onInputChange}\r\n                    label=\"Website\"\r\n                    id=\"website\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"city\"\r\n                    value={users.city}\r\n                    onChange={onInputChange}\r\n                    label=\"City\"\r\n                    id=\"city\"\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                  <TextField\r\n                    id=\"bio\"\r\n                    label=\"Bio\"\r\n                    multiline\r\n                    required\r\n                    fullWidth\r\n                    name=\"bio\"\r\n                    rows={3}\r\n                    variant=\"outlined\"\r\n                    value={users.bio}\r\n                    onChange={onInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ff9800\" }}\r\n                className={classes.submit}\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nimport User from \"./component/User\";\nimport UserView from \"./component/UserView\";\nimport UserAdd from \"./component/UserAdd\";\nimport UserEdit from \"./component/UserEdit\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  icon: {\n    minWidth: \"30px\",\n  },\n  bgPrimary: {\n    backgroundColor: \"#3f51b5\",\n    color: \"#FFF\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                ReactJs Crud Opearation\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={`${classes.bgPrimary} ${classes.drawerHeader}`}>\n              <Typography variant=\"h5\">\n                <Link to=\"/\" style={{ color: \"#FFF\", textDecoration: \"none\" }}>\n                  Logo\n                </Link>\n              </Typography>\n              <IconButton style={{ color: \"#FFF\" }} onClick={handleDrawerClose}>\n                {theme.direction === \"ltr\" ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List disablePadding>\n              <NavLink\n                activeClassName=\"selected\"\n                style={{ textDecoration: \"none\" }}\n                exact\n                to=\"/user\"\n              >\n                <ListItem button>\n                  <AccountCircleIcon style={{ marginRight: \"5px\" }} />\n                  <ListItemText primary=\"User\" />\n                </ListItem>\n              </NavLink>\n            </List>\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route exact path=\"/\" component={User} />\n              <Route exact path=\"/user\" component={User} />\n              <Route exact path=\"/user/add\" component={UserAdd} />\n              <Route exact path=\"/user/edit/:id\" component={UserEdit} />\n              <Route exact path=\"/user/:id\" component={UserView} />\n              <Route\n                render={() => {\n                  return <h1 align=\"center\">404 Not Found</h1>;\n                }}\n              />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}