{"version":3,"sources":["User.jsx","App.js","index.js"],"names":["User","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","icon","minWidth","App","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","style","backgroundColor","to","textDecoration","direction","Divider","List","activeClassName","exact","ListItem","button","ListItemText","primary","path","render","align","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73350f73.chunk.js","sourcesContent":["function User() {\r\n  return <h1>User</h1>;\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { BrowserRouter, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport User from \"./User\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  icon: {\n    minWidth: \"30px\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                ReactJs Crud Opearation\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div\n              className={classes.drawerHeader}\n              style={{ backgroundColor: \"3f51b5\" }}\n            >\n              <Typography variant=\"h5\">\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                  Logo\n                </Link>\n              </Typography>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === \"ltr\" ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              <NavLink\n                activeClassName=\"selected\"\n                style={{ textDecoration: \"none\" }}\n                exact\n                to=\"/user\"\n              >\n                <ListItem button>\n                  <AccountCircleIcon style={{ marginRight: \"5px\" }} />\n                  <ListItemText primary=\"User\" />\n                </ListItem>\n              </NavLink>\n            </List>\n          </Drawer>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => {\n                  return <h1 align=\"center\">Welcome to ReactJs Crud</h1>;\n                }}\n              />\n              <Route exact path=\"/user\" component={User} />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}